<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jennifer Tesolin</title>
    <description>This is Jennifer Tesolin's personal web site. Located on this site are tutorials and tips for web developers.</description>
    <link>https://jenntesolin.com/</link>
    <atom:link href="https://jenntesolin.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 13 Jan 2021 19:52:27 -0500</pubDate>
    <lastBuildDate>Wed, 13 Jan 2021 19:52:27 -0500</lastBuildDate>
    
      <item>
        <title>Installing Homebrew on Big Sur</title>
        <description>&lt;p&gt;
    This post describes how to install homebrew, as as well as casks (software applications).
    &lt;!--more--&gt;
&lt;/p&gt;
&lt;h2&gt;Getting ready&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;Step 1: Open Your Terminal program&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;
    Search in launchpad or spotlight for "Terminal.app"
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Step 2: Accept the license agreements&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;
    Copy and paste the below commands in your terminal. Be sure to read and accept the agreements.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install&lt;br&gt;sudo xcodebuild -license&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;b&gt;Step 3: Check if Ruby is installed, then update the files&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;
    Make sure that you can run ruby from command line by typing:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -v&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install homebrew&lt;/h2&gt;

&lt;p&gt;
    Homebrew is basically a package manager for the Mac, and in this being used to fix the default Ruby version that
    comes with the Mac. It will also be used further into the tutorial to install other development items.
&lt;/p&gt;
&lt;h3&gt;Copy Install Script&lt;/h3&gt;
&lt;p&gt;
    Go to the homebrew site (&lt;a href="https://brew.sh/" rel="nofollow noreferrer noopener"&gt;brew.sh&lt;/a&gt;) and check out
    the latest download code and run in in the terminal. It should look something like this:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"&lt;/code&gt;&lt;/pre&gt;

&lt;!-- &lt;img src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/homebrew-site.jpg" alt="Homebrew website" /&gt; --&gt;

&lt;p&gt;
    Once the install has completed, its best to run the below commands to make sure your installation is okay and has
    the latest files.
&lt;/p&gt;
&lt;h3&gt;Test commands&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;brew doctor&lt;br&gt;brew update&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Updating Homebrew packages&lt;/h3&gt;

&lt;p&gt;
    To update packages, you will need to run an update, and upgrade like below:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update&lt;br /&gt;brew upgrade&lt;/code&gt;&lt;/pre&gt;

Once in awhile you may want to also clean up unneeded files by this command:
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;brew cleanup&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Install some brew packages&lt;/h3&gt;
&lt;p&gt;You can install a package (called Formulae) either in bulk or one at a time.&lt;/p&gt;
&lt;p&gt;One at a time:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install wget&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Bulk:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install wget node python@3&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;ffmpeg&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;ffmpeg&lt;/code&gt;: is a great library for converting videos, and more. I typically use on my own video files to convert or stream media files.&lt;/p&gt;
&lt;p&gt;Default installation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew tap homebrew-ffmpeg/ffmpeg
brew install homebrew-ffmpeg/ffmpeg/ffmpeg&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check out the homebrew github repo to see the options: &lt;a href="https://github.com/homebrew-ffmpeg/homebrew-ffmpeg/" target="_blank" rel="nofollow noreferrer noopener"&gt;ffmpeg Github repository&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Mongo&lt;/h4&gt;
&lt;p&gt;Installing the Mongo Database is similar to ffmpeg. Run the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew tap mongodb/brew
brew install mongodb-community&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run as background service:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew services start mongodb/brew/mongodb-community&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run on demand (in terminal):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mongod --config /usr/local/etc/mongod.conf&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Enable and Install Casks&lt;/h3&gt;
&lt;p&gt;Casks is basically software that you can install directly from homebrew, instead of going to a site and downloading a file. I prefer casks, as it will also run a sha check (if available), and will output errors to your screen (if issues).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew tap homebrew/cask-versions&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unfortunately, I could not find a way to bulk install casks anymore, so you will need to run them one at a time. Underlined item is the cask.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install --cask &lt;u&gt;firefox&lt;/u&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A list of great casks are below. To find more, the homebrew site has a huge database of ones available: &lt;a href="https://formulae.brew.sh/" target="_blank" rel="nofollow noreferrer noopener"&gt;Homebrew formulae&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For some installations, if they fail, retry after you enable it in: System Preferences → Security &amp; Privacy → General.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;isyncr&lt;/li&gt;
    &lt;li&gt;visual-studio&lt;/li&gt;
    &lt;li&gt;visual-studio&lt;/li&gt;
    &lt;li&gt;gog-galaxy&lt;/li&gt;
    &lt;li&gt;origin&lt;/li&gt;
    &lt;li&gt;virtualbox&lt;/li&gt;
    &lt;li&gt;virtualbox-extension-pack&lt;/li&gt;
    &lt;li&gt;backblaze&lt;/li&gt;
    &lt;li&gt;backblaze-downloader&lt;/li&gt;
    &lt;li&gt;malwarebytes&lt;/li&gt;
    &lt;li&gt;dosbox-x&lt;/li&gt;
    &lt;li&gt;skype&lt;/li&gt;
    &lt;li&gt;github&lt;/li&gt;
    &lt;li&gt;vlc&lt;/li&gt;
    &lt;li&gt;handbrake&lt;/li&gt;
    &lt;li&gt;iterm2&lt;/li&gt;
    &lt;li&gt;spotify&lt;/li&gt;
    &lt;li&gt;sequel-pro&lt;/li&gt;
    &lt;li&gt;plexamp&lt;/li&gt;
    &lt;li&gt;firefox&lt;/li&gt;
    &lt;li&gt;keepassxc&lt;/li&gt;
    &lt;li&gt;visual-studio-code&lt;/li&gt;
    &lt;li&gt;calibre&lt;/li&gt;
    &lt;li&gt;appcleaner&lt;/li&gt;
    &lt;li&gt;tor-browser&lt;/li&gt;
    &lt;li&gt;jetbrains-toolbox&lt;/li&gt;
    &lt;li&gt;xampp&lt;/li&gt;
    &lt;li&gt;google-chrome&lt;/li&gt;
    &lt;li&gt;dash&lt;/li&gt;
    &lt;li&gt;protonmail-bridge&lt;/li&gt;
    &lt;li&gt;netbeans-php&lt;/li&gt;
    &lt;li&gt;java (installs the openJDK)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to run multiple Java Versions, check out this guide: &lt;a href="https://dev.to/gabethere/installing-java-on-a-mac-using-homebrew-and-jevn-12m8" target="_blank" rel="nofollow noreferrer noopener"&gt;Installing Java on a Mac using Homebrew and jevn-12m8&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Update Ruby and installed gems.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;brew install ruby&lt;/code&gt;&lt;/pre&gt;

Next, make sure you add Ruby to your shell configuration. Bellow is te shell for the default in Big Sur (fresh copy):

&lt;pre&gt;&lt;code&gt;echo 'export PATH="/usr/local/opt/ruby/bin:$PATH"' &gt;&gt; ~/.zshrc&lt;br&gt;
exec zsh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;exec zsh&lt;/code&gt;: will restart your terminal so the path kicks in. If you do not ant to run this, simple type
    &lt;code&gt;exit&lt;/code&gt;, then quit your terminal application. Next, restart it.
&lt;/p&gt;
&lt;p&gt;Next, update your ruby gems:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem update --system&lt;br&gt;gem update&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or if you want to have multiple versions, follow this great digital ocean guide: &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-macos" target="_blank" rel="nofollow noreferrer noopener"&gt;https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-macos&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;
        &lt;a href="https://brew.sh/" target="_blank" rel="nofollow noreferrer noopener"&gt;Homebrew homepage&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href="https://stackoverflow.com/a/58316584" target="_blank" rel="nofollow noreferrer noopener"&gt;Stack Overflow
            post: fixing Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        <pubDate>Wed, 13 Jan 2021 12:50:00 -0500</pubDate>
        <link>https://jenntesolin.com/blog/2021/01/13/mac-homebrew/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2021/01/13/mac-homebrew/</guid>
        
        <category>Ruby</category>
        
        <category>Homebrew</category>
        
        
        <category>Tutorial</category>
        
        <category>Mac_Web</category>
        
      </item>
    
      <item>
        <title>Great apps and programs for web development</title>
        <description>&lt;p&gt;Below is an updated list of different applications that you an use to create your projects in. This time, I tried to separate for paid, free, and subscriptions.&lt;/p&gt;&lt;!--more--&gt;
&lt;p&gt;&lt;i&gt;This post is an updated version from: &lt;a href="https://jenntesolin.com/blog/2013/05/30/great-apps-and-programs-for-web-development/"&gt;May 30, 2013&lt;/a&gt;.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Cross Platform Apps (free)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.sourcetreeapp.com/" target="_blank" rel="nofollow"&gt;Source tree &lt;/a&gt;- app to commit your source code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/" target="_blank" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; - powerful text editor&lt;/li&gt;
&lt;li&gt;&lt;a href="https://netbeans.apache.org/" target="_blank" rel="nofollow"&gt;Netbeans&lt;/a&gt; - an IDE. Download the version based on language you typically use, or add extensions to do all types of work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.virtualbox.org/" target="_blank" rel="nofollow"&gt;Virtual Box&lt;/a&gt;: Virtual PC creator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cross Platform Apps (Subscription)&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://www.adobe.com/creativecloud.html" target="_blank" rel="nofollow"&gt;Adobe Creative Suite&lt;/a&gt; - create/edit text, pdfs, videos, and more.&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://www.jetbrains.com/phpstorm/" target="_blank" rel="nofollow"&gt;PHP Storm&lt;/a&gt; - an IDE for php&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="nofollow"&gt;Web Storm&lt;/a&gt;. an ide for web development (can be added as an extension to PHP Storm.&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://nordvpn.com/" target="_blank" rel="nofollow"&gt;NordVPN&lt;/a&gt;: VPN Service provider.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cross Platform Apps (paid)&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://cyberduck.io/" target="_blank" rel="nofollow"&gt;Cyberduck&lt;/a&gt; - file transfer program.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.sublimetext.com/" target="_blank" rel="nofollow"&gt;Sublime&lt;/a&gt; - text editor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows Specific (free)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://notepad-plus-plus.org/" target="_blank" rel="nofollow"&gt;Notepad++&lt;/a&gt; - a slim text editor.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://winscp.net/eng/index.php" target="_blank" rel="nofollow"&gt;WinSCP&lt;/a&gt; - file transfer program.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac Specific (paid)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sketch.com/" target="_blank" rel="nofollow"&gt;Sketch&lt;/a&gt; - a design toolkit. After 1 year, if you want to update, you need to pay.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://affinity.serif.com/" target="_blank" rel="nofollow"&gt;Affinity Suite&lt;/a&gt; - Non subscription alternative to Adobe. Upgrades are included.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.binarynights.com/" target="_blank" rel="nofollow"&gt;Fork Lift&lt;/a&gt; - file manager and transfer client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; Web Apps and automation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://yeoman.io/" target="_blank" rel="nofollow"&gt;Yeoman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pastebin.com/" target="_blank" rel="nofollow"&gt;Paste bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/" target="_blank" rel="nofollow"&gt;Code Sandbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/" target="_blank" rel="nofollow"&gt;CodePen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sqlfiddle.com/" target="_blank" rel="nofollow"&gt;Sql Fiddle&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
&lt;p&gt;iOS apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS anywhere&lt;/li&gt;
&lt;li&gt;Draftcode&lt;/li&gt;
&lt;li&gt;Pythonista&lt;/li&gt;
&lt;li&gt;Textastic&lt;/li&gt;
&lt;/ul&gt;</description>
        <pubDate>Wed, 14 Oct 2020 16:00:00 -0400</pubDate>
        <link>https://jenntesolin.com/blog/2020/10/14/great-apps-and-programs-for-web-development-revisted/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2020/10/14/great-apps-and-programs-for-web-development-revisted/</guid>
        
        <category>Apps</category>
        
        
        <category>Tip</category>
        
      </item>
    
      <item>
        <title>Installing Git and Github on your Mac</title>
        <description>&lt;p&gt;
	This post describes how to install git and github on your mac installation. There are two common ways to install. Both methods are described below. Please note the first way requires homebrew. &lt;!--more--&gt;
&lt;/p&gt;

&lt;h3&gt;Installing with homebrew&lt;/h3&gt;

&lt;p&gt;
	To install GIT, just run the below commands and enter your information when requested. Brew update/upgrade is being run to show best practice. Files should always be updated before trying to run commands.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update&lt;br&gt;brew upgrade&lt;br&gt;brew install git&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
	A quick way to install github, is to enter the below command in your terminal using brew casks. Casks basically give yo a way to install software without the DMG files.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install --cask github&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Installing with DMG files&lt;/h3&gt;

&lt;p&gt;
	Go to the Git site at &lt;a hrf="https://git-scm.com/download/mac" target="_blank" rel="nofollow noreferrer noopener"&gt;https://git-scm.com/download/mac&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
	Alternatively, if you use github, you can download the &lt;a hrf="https://desktop.github.com/" target="_blank" rel="nofollow noreferrer noopener"&gt;github desktop DMG&lt;/a&gt; file, then install the git command line tools from the app itself.
&lt;/p&gt;

&lt;p&gt;
	To install the git command line tools from within the GitHub application, click on the app name "GitHub Desktop", then choose "Install command line tool".
&lt;/p&gt;

&lt;img src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/github-cmd-tools.png" alt="Image showing location of command line tools install on Github Desktop Application" /&gt;
</description>
        <pubDate>Thu, 12 Dec 2019 06:18:00 -0500</pubDate>
        <link>https://jenntesolin.com/blog/2019/12/12/git-github/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2019/12/12/git-github/</guid>
        
        <category>git</category>
        
        <category>github</category>
        
        <category>homebrew</category>
        
        
        <category>Tutorial</category>
        
        <category>Mac_Web</category>
        
      </item>
    
      <item>
        <title>Jekyll: Setting up your development environment</title>
        <description>&lt;p&gt;
  Jekyll is a static site generator that runs on NodeJS. Its a great alternative to WordPress that eliminates the need for databases.&lt;!--more--&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;em&gt;This post was originally written on March 17, 2015. It has been updated for Mac OS Catalina.&lt;/em&gt;
&lt;/p&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;a href="/blog/2021/01/13/mac-homebrew/"&gt;Ruby&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install Jekyll dependencies:&lt;/h3&gt;
&lt;p&gt;
  To install Jekyll, run the command:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install jekyll bundler&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  You can import your current WordPress posts, by first exporting your entire Wordpress blog using the WordPress tool to Export to an XML file.
&lt;/p&gt;

&lt;p&gt;
  Once your file is ready, you will need to install the Jekyll Importer by the below command:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install jekyll-import&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Here is a list of other plugins that may be useful in your blog:
&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;a href="https://github.com/JesseHerrick/jekyll-angular" target="_blank"  rel="nofollow noreferrer noopener"&gt;jekyll-angular&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="https://github.com/jekyll/jekyll-feed" target="_blank"  rel="nofollow noreferrer noopener"&gt;jekyll-feed&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="https://jekyllrb.com/docs/pagination/" target="_blank"  rel="nofollow noreferrer noopener"&gt;jekyll-paginate&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a list over on the &lt;a href="https://jekyllrb.com/docs/plugins/" target="_blank" rel="nofollow noreferrer noopener"&gt;jekyll website&lt;/a&gt; (separated by category).&lt;/p&gt;

&lt;h3&gt;A new Jekyll instance&lt;/h3&gt;

&lt;p&gt;
  &lt;em&gt;Skip to next section to import your WordPress blog.&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt;
  First, run the the below command, replacing "my-site-name" with the folder name for your site.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jekyll new my-site-name&lt;br /&gt;cd my-new-site-name&lt;br /&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Sample output for running &lt;code&gt;jekyll new my-site-name&lt;/code&gt;.
&lt;/p&gt;
&lt;img src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll-new-cmd1.png" target="Terminal output for commands to serve site" /&gt;

&lt;p&gt;
  Jekyll will now generate a site in the folder "&lt;code&gt;my-site-name&lt;/code&gt;".
&lt;/p&gt;
&lt;p&gt;
  To override the default jekyll theme, you will need ot create two folders as seen in the list below. These are &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_layouts&lt;/code&gt;. For more information check out &lt;a href="https://jekyllrb.com/docs/themes/#overriding-theme-defaults"  target="_blank" rel="nofollow noreferrer noopener"&gt;overriding theme defaults&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;code&gt;_config.yml&lt;/code&gt; stores the website configuration data such as site name, description and base address. Check out &lt;a href="https://gist.github.com/jennifert/de156dc7b792a3f3a0e4b63aa66e768a" target="_blank" rel="nofollow noreferrer noopener"&gt;my sample config file&lt;/a&gt;.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_posts&lt;/code&gt; is where posts for your site are stored in markdown or HTML format. Check out &lt;a href="https://gist.githubusercontent.com/jennifert/896428b15cd586f91fd36872a0bff1d5/raw/acedbfb817fb90e6ce0fb713043edae79c93f448/jekyll-post.markdown" target="_blank"  rel="nofollow noreferrer noopener"&gt;my sample post formatting&lt;/a&gt;.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_sites&lt;/code&gt; This is where the pages will be built into for your production build.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;about.md&lt;/code&gt; is the about page for your site.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;feed.xml&lt;/code&gt; will have your rss feed. This generates on its own.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;index.md&lt;/code&gt; your site's main page.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;404.html&lt;/code&gt; your sites "page not found" file.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;gemfile&lt;/code&gt; a list of ruby plugins installed
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;assets&lt;/code&gt; where you can store your js and other files
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;sass&lt;/code&gt; your sass code
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_includes&lt;/code&gt; is where you store portions of a file such as your menu, header, footer, and analytics code.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;code&gt;_layouts&lt;/code&gt;puts the pieces of the includes together for a post, page and index file.
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd my-site-name&lt;br&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Then, browse to: &lt;a href="http://localhost:4000" target="_blank" rel="nofollow noreferrer noopener"&gt;http://localhost:4000&lt;/a&gt;.  You can edit files, and Jekyll will make those updates behind the scene as soon as you save...just refresh to see your changes.
&lt;/p&gt;

&lt;p&gt;
  Below is what the directory will look like in the terminal, as well as the ouput running the &lt;code&gt;serve&lt;/code&gt;command to preview your site locally:
&lt;/p&gt;
&lt;img src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll-new-cmd2.png" alt="Jekyll serve command terminal output" /&gt;

&lt;h3&gt;WordPress Import instructions (wordpress.com and self hosted)&lt;/h3&gt;
&lt;p&gt;
  Click one of the links below to check out the awesome docs at Jekyll RB.
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;a href="http://import.jekyllrb.com/docs/wordpressdotcom/" rel="nofollow noreferrer noopener" target="_blank"&gt;Jekyll Import Docs: Wordpress.com&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="http://import.jekyllrb.com/docs/wordpress/" rel="nofollow noreferrer noopener" target="_blank"&gt;Jekyll Import Docs: Wordpress (self install)&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Drafts&lt;/h3&gt;

&lt;p&gt;
  To wok on a post locally, but not moving it live, create a folder at the root called &lt;code&gt;_drafts&lt;/code&gt;. Next, add a markdown or html file without the address. Finally, run the below in your terminal:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bundle exec jekyll serve --drafts&lt;/code&gt;&lt;/pre&gt;

&lt;img src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll5.png" alt="Terminal screen output showing draft folder"&gt;

&lt;p&gt;
  Changes can be made on the fly using this method as well. When ready to publish, move the file to &lt;code&gt;_posts&lt;/code&gt; and add a date.
&lt;/p&gt;

&lt;h3&gt;Publishing your new site&lt;/h3&gt;

&lt;p&gt;
  The last step is in this process is to push your files on-line. First, instead of &lt;code&gt;jekyll serve&lt;/code&gt; you will want to run &lt;code&gt;jekyll build&lt;/code&gt; like below. This replaces all of your development links with what your production link. &lt;a href="/blog/2015/08/08/jekyll-config-file/"&gt;Check out how to set your configuration.&lt;/a&gt;
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bundle exec jekyll build&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
  Move into the root of &lt;code&gt;_site&lt;/code&gt;. These are the production ready files that should be moved to your server.
&lt;/p&gt;

&lt;p&gt;
  The first chunk of files below shows the root of my Jekyll site, while the second shows the production ready files. Note that some files from the root of the Jekyll site are not included. These are excluded in &lt;code&gt;_config.yml&lt;/code&gt;
&lt;/p&gt;

&lt;img src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/jekyll-build-cmd.png" alt="Terminal screen output showing production folder contents"&gt;

&lt;p&gt;
  Note that if you use GitHub pages, you will need to compile the files on your computer first  then commit your files to the master branch.
&lt;/p&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;p&gt;
  Check out these Jekyll tutorials for more on working with the Jekyll static site generator:
&lt;/p&gt;

&lt;ul&gt;

  &lt;li&gt;
    &lt;a href="/blog/2016/02/04/jekyll-on-azure/"&gt;Configure on Azure or Github Pages&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/blog/2015/08/08/jekyll-config-file/"&gt;The configuration file&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/blog/2015/10/28/fix-jekyll-pagination-upgrade-to-3/"&gt;Fix pagination after upgrading (V2 to V3)&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="/blog/2015/05/22/Jekyll-Custom-Easy-Search-jquery/"&gt;Easy searching with JSON and jQuery&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="http://stackoverflow.com/a/4920620" target="_blank" rel="nofollow noreferrer noopener"&gt;Jekyll on Stack Overflow&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="http://import.jekyllrb.com/docs/wordpressdotcom/" rel="nofollow noreferrer noopener" target="_blank"&gt;Jekyll Import Docs: Wordpress.com&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="http://import.jekyllrb.com/docs/wordpress/" rel="nofollow noreferrer noopener" target="_blank"&gt;Jekyll Import Docs: Wordpress (self install)&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="http://jekyllrb.com/docs/drafts/" rel="nofollow noreferrer noopener" target="_blank"&gt;Jekyll Docs - Working with drafts&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="http://jekyllrb.com/docs/troubleshooting/#installation-problems" rel="nofollow noreferrer noopener" target="_blank"&gt;Jekyll Docs - Installation Problems&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 11 Dec 2019 15:30:21 -0500</pubDate>
        <link>https://jenntesolin.com/blog/2019/12/11/Jekyll-Set-Up-Publish/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2019/12/11/Jekyll-Set-Up-Publish/</guid>
        
        <category>Jekyll</category>
        
        <category>WordPress</category>
        
        <category>Ruby</category>
        
        
        <category>Tutorial</category>
        
        <category>Mac_Web</category>
        
      </item>
    
      <item>
        <title>Installing Homebrew and Fixing Ruby on your Mac (outdated)</title>
        <description>&lt;p&gt;
	This post describes how to install homebrew, and use it to fix your Ruby install.
	&lt;!--more--&gt;
&lt;/p&gt;
&lt;P&gt;&lt;b&gt;This is an old version. &lt;a href="/blog/2021/01/13/mac-homebrew/"&gt;Follow this link for the latest.&lt;/a&gt;&lt;/b&gt;&lt;/P&gt;
&lt;h3&gt;Enable Ruby&lt;/h3&gt;

&lt;p&gt;
	First up, let's enable Ruby. We are installing Ruby first as other items needed for development and installation
	require it.
&lt;/p&gt;

&lt;h4&gt;Step 1: Install X-code, and check to make sure that its the latest&lt;/h4&gt;

&lt;p&gt;
	To install x-Code, head over to the app store then click: "categories" &amp;gt; "development". It is typically near the
	top of the free downloads. Click the download button, then go grab a snack.... it clocks in at about 8GB so it may
	take awhile to download and install.
&lt;/p&gt;

&lt;p&gt;
	If you already have it installed, make sure its up to date.
&lt;/p&gt;

&lt;h3&gt;Step 2: Accept the license agreements&lt;/h3&gt;

&lt;p&gt;
	Copy and paste the below commands in your terminal. Be sure to read and accept the agreements.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install&lt;br&gt;sudo xcodebuild -license&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Step 3: Check if Ruby is installed, then update the files&lt;/h3&gt;

&lt;p&gt;
	To check what version of Ruby you have, you will need to run the below command in the terminal:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -v&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
	To update your ruby installation and gems to the latest version, run the below commands. Please note that multiple versions of Ruby are beyond the scope of this blog. If you want to run multiple versions, check out a project like RVM (&lt;a href="https://stackoverflow.com/a/58316584" target="_blank" rel="nofollow noreferrer noopener"&gt;Stack Overflow post: fixing Ruby&lt;/a&gt;).
&lt;/p&gt;

&lt;h3&gt;Install homebrew&lt;/h3&gt;

&lt;p&gt;
	Homebrew is basically a package manager for the Mac, and in this being used to fix the default Ruby version that comes with the Mac. It will also be used further into the tutorial to install other development items.
&lt;/p&gt;

&lt;p&gt;
	Go to the homebrew site (&lt;a href="https://brew.sh/" rel="nofollow noreferrer noopener"&gt;brew.sh&lt;/a&gt;) and check out the latest download code and run in in the terminal. It should look something like this:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"&lt;/code&gt;&lt;/pre&gt;

&lt;img src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/homebrew-site.jpg" alt="Homebrew website" /&gt;

&lt;p&gt;
	Once the install has completed, its best to run the below commands to make sure your installation is okay and has the latest files.
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew doctor&lt;br&gt;brew update&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
	Please note that Homebrew commands are easiest for fixing Ruby, however, as mentioned above, some prefer Ruby Version Manager (RVM) to switch Ruby versions.
&lt;/p&gt;

&lt;h4&gt;Updating Homebrew packages&lt;/h4&gt;

&lt;p&gt;
	To update packages, you will need to run an update, and upgrade like below:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update&lt;br /&gt;brew upgrade&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Update Ruby and installed gems.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;brew install ruby&lt;br&gt;gem update --system&lt;br&gt;gem update&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;
		&lt;a href="https://brew.sh/" target="_blank" rel="nofollow noreferrer noopener"&gt;Homebrew homepage&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;a href="https://stackoverflow.com/a/58316584" target="_blank" rel="nofollow noreferrer noopener"&gt;Stack Overflow post: fixing Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Dec 2019 15:50:00 -0500</pubDate>
        <link>https://jenntesolin.com/blog/2019/12/10/mac-ruby/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2019/12/10/mac-ruby/</guid>
        
        <category>Ruby</category>
        
        
        <category>Tutorial</category>
        
        <category>Mac_Web</category>
        
      </item>
    
      <item>
        <title>Setting up your Mac computer for local development and programming</title>
        <description>&lt;p&gt;Mac computers are great for programming, and many development software and Utilities are free to get set up and running. This post describes how to set up your mac for programming and web development from enabling PHP, Ruby, node and more. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;To really understand what goes on in web development, you need to understand what goes on behind the scenes on your server environment. This would mean taking the time to install and enable the tools, servers and other things you will use by hand alongside or in place of solutions such as XAMPP or MAMP.&lt;/p&gt;

&lt;!-- TODO: try to just use tag - Mac_Web to generate once all created--&gt;
&lt;p&gt;
	&lt;em&gt;Note: it is recommended to start with the tutorial "Installing Homebrew and Fixing Ruby on your Mac" before following instructions in the Git and Github tutorial.&lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
		Apache
	&lt;/li&gt;
	&lt;li&gt;
		ASP.net
	&lt;/li&gt;
	&lt;li&gt;
		Composer
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href="/blog/2019/12/12/git-github/"&gt;Git and Github&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href="/blog/2019/12/11/Jekyll-Set-Up-Publish/"&gt;Jekyll&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href="/blog/2021/01/13/mac-homebrew/"&gt;Installing Homebrew and Fixing Ruby on your Mac&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		MySql/Maria DB
	&lt;/li&gt;
	&lt;li&gt;
		&lt;a href="/blog/2018/04/18/installing-node-js-and-grunt/"&gt;Node JS&lt;/a&gt;
	&lt;/li&gt;
	&lt;li&gt;
		PHP
	&lt;/li&gt;
	&lt;li&gt;
		Python
	&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 02 Dec 2019 15:40:21 -0500</pubDate>
        <link>https://jenntesolin.com/blog/2019/12/02/mac-local-dev-server/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2019/12/02/mac-local-dev-server/</guid>
        
        <category>Mac</category>
        
        <category>Apache</category>
        
        <category>PHP</category>
        
        <category>MySQL</category>
        
        <category>Node</category>
        
        <category>Ruby</category>
        
        
        <category>Tutorial</category>
        
        <category>Series</category>
        
      </item>
    
      <item>
        <title>Using iOS and Android devices together.</title>
        <description>&lt;p&gt;Using an android in an Apple environment can be a bit tricky, but here are some tricks and resources to help you out. This post is an update to one titled "Moving from an iOS Device to Android (iCloud)".&lt;!--more--&gt;&lt;/p&gt;
&lt;P&gt;
  &lt;em&gt;Note: I am not in partnership or sponsored in anyway by the below programs, they are what I have researched and used over the past few years.&lt;/em&gt;
&lt;/P&gt;
&lt;p&gt;&lt;strong&gt;Calendar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.dmfs.caldav.icloud" target="_blank" rel="nofollow"&gt;SmoothSync for Cloud Calendar&lt;/a&gt;: SmoothSync for Cloud Calendar syncs your iCloud calendars and reminders. Please note this is for Apple Calendars, it will not sync events from your Google Calendar to your Mac.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contacts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.dmfs.carddav.icloud" target="_blank" rel="nofollow"&gt;SmoothSync for Cloud Contacts&lt;/a&gt;: SmoothSync for Cloud Contacts syncs your iCloud contacts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iCloud Mail Sync&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The easiest way to sync  your settings is to use this &lt;a href="https://support.apple.com/en-us/HT202304" title="Imap settings for iCloud" target="_blank" rel="nofollow"&gt;IMAP email guide&lt;/a&gt; from apple. You will need to generate an app-specific password for your client. &lt;a href="https://www.androidcentral.com/how-set-your-icloud-email-account-android" target="_blank" rel="nofollow"&gt;AndroidCentral&lt;/a&gt; has a few notes on getting around any SSL issues (try TSL)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iTunes Library Sync&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
  To sync your library, there are excellent products from JRT Studio to sync and play your files. Please note though, that the video files purchased in the iTunes store will not play on your android device due to the DRM used.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
  &lt;a href="http://www.jrtstudio.com/iSyncr-iTunes-for-Android" target="_blank" rel="nofollow"&gt;iSyncer&lt;/a&gt;: This program is used to move the files from your iTunes library to your device. You will need to download a copy on your android and a copy on your Mac.
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jrtstudio.com/RocketPlayer/Free-vs-premium-and-cloud" target="_blank" rel="nofollow"&gt;Rocket player&lt;/a&gt;: this program will allow you to play your files and cast them, though you will need to have oth the free version and the premium license to play all file formats (alac, tta, ape, mpc, wav, flac, wv, wma).
&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 08 Sep 2018 15:00:00 -0400</pubDate>
        <link>https://jenntesolin.com/blog/2018/09/08/using-ios-and-android-together/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2018/09/08/using-ios-and-android-together/</guid>
        
        <category>android</category>
        
        <category>iCloud</category>
        
        <category>iOS</category>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>Installing Node JS and Grunt</title>
        <description>&lt;p&gt;This tutorial focuses on installing the platform, and provides resources for using Grunt.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;em&gt;This was originally from May 8, 2013 and has been re-written for the latest version of Node and Grunt.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;Step 1:&lt;/p&gt;
&lt;p&gt;&lt;b&gt;If you installed with homebrew, skip to Proxy or Grunt step(s)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Otherwise, Download the latest stable binary from &lt;a title="Node JS web site" href="https://nodejs.org/en/download/" target="_blank" rel="nofollow"&gt;nodejs.org&lt;/a&gt;. On production servers is recommended to use the latest STABLE version. The default settings will be fine.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/nodejs-home.png"&gt;&lt;img alt="NodeJS.com homepage" src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/nodejs-home_thumb.png" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Step 2: Verify your path as per installer message: Make sure that &lt;strong&gt;/usr/local/bin&lt;/strong&gt; is in your $PATH.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-9.38.02-PM.png"&gt;&lt;img class="alignnone size-medium wp-image-167" alt="Installer screenshot after install is successful" src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-9.38.02-PM-300x211.png" width="300" height="211" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: I found this Stackoverflow post useful: &lt;a href="https://stackoverflow.com/questions/42323485/set-environment-variables-on-mac-os-x-sierra#42323635" target="_blank" rel="nofollow"&gt;https://stackoverflow.com&lt;/a&gt;. Please note to check that the path in the installer is shown in case it differs between versions. For my install, the path was correctly set.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;USE A PROXY WITH NODE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you require the use of a proxy with node, you set it with the below (this to this post &lt;a href="https://jjasonclark.com/how-to-setup-node-behind-web-proxy/" target="_blank" rel="nofollow"&gt;How to setup Node.js and Npm behind a corporate web proxy&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm config set proxy http://proxy.example.org:8080&lt;br&gt;npm config set https-proxy http://proxy.example.org:8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GRUNT SET-UP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Step 1: Installing Grunt on your machine globally.&lt;/p&gt;
&lt;p&gt;This section uses grunt &lt;em&gt;0.4.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This guide was made from referring to the official getting started documentation: &lt;a href="http://gruntjs.com/getting-started" target="_blank" rel="nofollow"&gt;http://gruntjs.com/getting-started&lt;/a&gt;. The sections referred to in this blog are: "&lt;a href="http://gruntjs.com/getting-started#installing-the-cli" target="_blank" rel="nofollow" name="installing-the-cli"&gt;Installing the CLI&lt;/a&gt;" and "&lt;a href="http://gruntjs.com/getting-started#preparing-a-new-grunt-project" target="_blank" rel="nofollow" name="preparing-a-new-grunt-project"&gt;Preparing a new grunt project&lt;/a&gt;". Grunt JS is installed by what node js refers to as NPM, or Node Package Manager. To install Grunt from NPM, you will need to use the command line.&lt;/p&gt;
&lt;p&gt;Type following command into the terminal:&lt;/p&gt;
&lt;code&gt;npm install -g grunt-cli&lt;/code&gt;
&lt;p&gt;Step 2: Create a package.json file&lt;/p&gt;
&lt;p&gt;go into your project directory, and run the below command. You can use the default settings, as the text file will be edited. My output is below.&lt;/p&gt;
&lt;code&gt;npm init&lt;/code&gt;
&lt;p&gt;&lt;a href="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-10.53.38-PM.png"&gt;&lt;img class="alignnone size-medium wp-image-182" alt="run npm init" src="https://jenntesolin.nyc3.digitaloceanspaces.com/blog/Screen-Shot-2013-05-07-at-10.53.38-PM-300x158.png" width="300" height="158" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Open your favorite text editor, and edit the file "package.json" replace the text so it reads similar to the below:&lt;/p&gt;
&lt;code&gt;{&lt;br&gt;
  "name": "demo-project",&lt;br&gt;
  "version": "0.0.1",&lt;br&gt;
  "author": "Jennifer Tesolin"&lt;br&gt;
}&lt;/code&gt;
&lt;p&gt;Now, using the terminal, run the below command in your project directory:&lt;/p&gt;
&lt;code&gt;npm install grunt --save-dev&lt;br&gt;
npm install&lt;/code&gt;
&lt;p&gt;This will install grunt into your locally in your package folder. If you open your package.json, you will find a new section added:&lt;/p&gt;
&lt;code&gt;,&lt;br&gt;
"devDependencies": {&lt;br&gt;
    "grunt": "~0.4.1"&lt;br&gt;
 }&lt;/code&gt;
&lt;p&gt;&lt;strong&gt;Associating plugins with Grunt/package.json&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Run the below command to use the plugin npm.&lt;/p&gt;
&lt;code&gt;npm install grunt-contrib --save-dev&lt;/code&gt;
&lt;p&gt;&lt;strong&gt;Create your grunt file&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In your text editor, create a file called "Gruntfile.js" and save this into your project directory. A sample copy is below:&lt;/p&gt;
&lt;code&gt;module.exports = function(grunt) {&lt;br&gt;
&lt;br&gt;
  // Project configuration.&lt;br&gt;
  grunt.initConfig({&lt;br&gt;
&lt;br&gt;
  });&lt;br&gt;
&lt;br&gt;
  // Load call for plugins&lt;br&gt;
&lt;br&gt;
  // Default task(s).&lt;br&gt;
&lt;br&gt;
};&lt;/code&gt;
&lt;p&gt;Check out the plugin's you can configure here: &lt;a href="http://gruntjs.com/sample-gruntfile" target="_blank" rel="nofollow"&gt;http://gruntjs.com/sample-gruntfile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
  My current grunt file:&lt;br /&gt;
  &lt;a href="https://gist.github.com/jennifert/9037731119d3b7200bb17229822c4fb8" target="_blank" rel="nofollow"&gt;https://gist.github.com/jennifert/9037731119d3b7200bb17229822c4fb8&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Re-install devDependencies or dependencies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With the new package.lock file, npm update may not get the latest version if its a major update. Use the below to pick up the latest package. With Thanks to stack overflow (please let me know if you see the post, it was deleted from my notes).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm uninstall jshint&lt;br&gt;npm cache clean -f&lt;br&gt;npm install --save-dev jshint&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources, and Additional sources used&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For more grunt resources, check out the below.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://tutsplus.com/tutorials/search/grunt" target="_blank" rel="nofollow"&gt;Tutsplus.com's How-to tutorials&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://www.sitepoint.com/?s=grunt" target="_blank" rel="nofollow"&gt;Sitepoint.com's How-to tutorials&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://scotch.io/tutorials/a-simple-guide-to-getting-started-with-grunt" target="_blank" rel="nofollow"&gt;A Simple Guide to Getting Started With Grunt ― Scotch&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/grunt-devtools/fbiodiodggnlakggeeckkjccjhhjndnb?hl=en" target="_blank" rel="nofollow"&gt;Google Chrome Grunt dev tools.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.justinmccandless.com/blog/A+Tutorial+for+Getting+Started+with+Grunt" target="_blank" rel="nofollow"&gt;A tutorial for getting started with Grunt&lt;/a&gt; for plugin section.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://net.tutsplus.com/tutorials/javascript-ajax/meeting-grunt-the-build-tool-for-javascript/" target="_blank" rel="nofollow"&gt;Meet Grunt: The Build Tool for JavaScript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://web.archive.org/web/20170606003354/http://dailyjs.com/post/backbone-tutorial-1" target="_blank" rel="nofollow"&gt;DailyJS: Backbone.js Tutorial: Build Environment&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Apr 2018 15:00:00 -0400</pubDate>
        <link>https://jenntesolin.com/blog/2018/04/18/installing-node-js-and-grunt/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2018/04/18/installing-node-js-and-grunt/</guid>
        
        <category>Grunt</category>
        
        <category>Node JS</category>
        
        
        <category>Tutorial</category>
        
        <category>Mac_Web</category>
        
      </item>
    
      <item>
        <title>Quick Tip: Highcharts credit in a new window</title>
        <description>&lt;p&gt;Here is a great fiddle by Torstein Hønsi, that shows how to have highcharts credits open in a new window/tab.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; if you are using for free, you MUST (in the below) re-add the text highcharts.com (in place of your domain). If their domain is not seen, you will be against the license.&lt;/p&gt;

&lt;script async src="//jsfiddle.net/G9h8z/1/embed/"&gt;&lt;/script&gt;

&lt;h3&gt;Resources:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;a href="https://www.highcharts.com/docs/getting-started/your-first-chart" target="_blank" rel="nofollow"&gt;Highcharts.com - First chart&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="http://jsfiddle.net/G9h8z/1/" target="_blank" rel="nofollow"&gt;JS Fiddle for right click by Torstein Hønsi&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 28 May 2017 10:34:00 -0400</pubDate>
        <link>https://jenntesolin.com/blog/2017/05/28/basic-highcharts-rightclick/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2017/05/28/basic-highcharts-rightclick/</guid>
        
        <category>JavaScript</category>
        
        <category>chart</category>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>Quick Tip: WordPress and Campaign Monitor</title>
        <description>&lt;p&gt;Just a quick and easy way to integrate your campaign monitor list. Note: this post first appeared Apr 18, 2013, and has been updated to reflect the most recent information.&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;Adding a subscribe form to your site&lt;/h3&gt;
&lt;p&gt;The easiest way, is to use the WordPress text widget, and then paste in the campaign monitor built form code into it. To get a form, go to your list in campaign monitor, and click "Grow your audience". Next, click "Copy/paste a form to your site". Select the list(s) that you want, and then click generate code.  This will provide the form code to put into your blog. You can later customize the settings like confirmation, thank you note, etc.&lt;/p&gt;
&lt;h3&gt;E-mail subscribers&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Campaign Monitor automation (suggested)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;When this post was first typed out, the "automation" functionality was not yet in Campaign Monitor. The Automation functionality in Campaign Monitor can read and parse RSS feeds. First, make sure to add the "&lt;a href="https://www.campaignmonitor.com/create/rss-to-email/" target="_blank" rel="nofollow"&gt;RSS to Email"&lt;/a&gt; tags into your template, and &lt;a href="https://help.campaignmonitor.com/topic.aspx?t=868" target="_blank" rel="nofollow"&gt;create your list&lt;/a&gt; (as you normally would). Next &lt;a href="https://help.campaignmonitor.com/topic.aspx?t=212" target="_blank" rel="nofollow"&gt;follow Campaign Monitor's guide&lt;/a&gt; for email automation, using the list and template mentioned earlier. That's it!&lt;/p&gt;
&lt;p&gt;This way is suggested, as its using the Campaign monitor directly, and you are not adding bulk to your theme files and site.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Older way (not suggested)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Add the &lt;a title="Campaign Monitor Wrapper for PHP" href="http://campaignmonitor.github.io/createsend-php/" target="_blank" rel="nofollow"&gt;api wrapper&lt;/a&gt; into the themes directory for you to be able to access the functionality. Next, use the "create a draft campaign" and "Sending a draft campaign to send an email. This code should go into your functions.php file like below:&lt;/p&gt;
&lt;code&gt;function email_alert()  {&lt;br&gt;
    //campaign monitor code&lt;br&gt;
}&lt;br&gt;
add_filter ( 'publish_post', 'email_alert' );&lt;/code&gt;
&lt;p&gt;Resource:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wordpress.org/support/topic/add_action-with-publish_post" target="_blank" rel="nofollow"&gt;Wordpress.org support: Publish actions&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Jan 2017 12:30:30 -0500</pubDate>
        <link>https://jenntesolin.com/blog/2017/01/06/quick-tip-word-press-and-campaign-monitor/</link>
        <guid isPermaLink="true">https://jenntesolin.com/blog/2017/01/06/quick-tip-word-press-and-campaign-monitor/</guid>
        
        <category>wordpress</category>
        
        <category>PHP</category>
        
        
        <category>Tip</category>
        
      </item>
    
  </channel>
</rss>